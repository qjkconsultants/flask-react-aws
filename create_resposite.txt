qaisar@Qaisars-Mini flask-react-aws % aws ecr create-repository --repository-name test-driven-users --region us-west-1
{
    "repository": {
        "repositoryArn": "arn:aws:ecr:us-west-1:704754483426:repository/test-driven-users",
        "registryId": "704754483426",
        "repositoryName": "test-driven-users",
        "repositoryUri": "704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-users",
        "createdAt": 1636704964.0,
        "imageTagMutability": "MUTABLE",
        "imageScanningConfiguration": {
            "scanOnPush": false
        },
        "encryptionConfiguration": {
            "encryptionType": "AES256"
        }
    }
}
qaisar@Qaisars-Mini flask-react-aws % aws ecr create-repository --repository-name  test-driven-client --region us-west-1
{
    "repository": {
        "repositoryArn": "arn:aws:ecr:us-west-1:704754483426:repository/test-driven-client",
        "registryId": "704754483426",
        "repositoryName": "test-driven-client",
        "repositoryUri": "704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-client",
        "createdAt": 1636704991.0,
        "imageTagMutability": "MUTABLE",
        "imageScanningConfiguration": {
            "scanOnPush": false
        },
        "encryptionConfiguration": {
            "encryptionType": "AES256"
        }
    }
}

===

docker build \
  -f services/users/Dockerfile \
  -t 704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-users:dev \
  ./services/users

docker build \
  -f services/client/Dockerfile \
  -t 704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-client:dev \
  ./services/client


 aws ecr get-login-password --region us-west-1 \
  | docker login --username AWS --password-stdin 704754483426.dkr.ecr.us-west-1.amazonaws.com



$ docker push 704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-users:dev

$ docker push 704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-client:dev

qaisar@Qaisars-Mini flask-react-aws % aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 704754483426.dkr.ecr.us-west-1.amazonaws.com

 1065  aws ecr get-login-password --region us-west-1 \\n  | docker login --username AWS --password-stdin <AWS_ACCOUNT_ID>.dkr.ecr.us-west-1.amazonaws.com
 1066  aws ecr get-login-password --region us-west-1 \\n  | docker login --username AWS --password-stdin 704754483426.dkr.ecr.us-west-1.amazonaws.com
 1067  vim create_resposite.txt
 1068  code .
 1069  docker-compose down
 1070  export REACT_APP_API_SERVICE_URL=http://localhost:5004
 1071  docker-compose -f docker-compose.prod.yml up -d --build
 1072  docker-compose -f docker-compose.prod.yml exec api python manage.py recreate_db
 1073  docker-compose -f docker-compose.prod.yml exec api python manage.py seed_db

$ docker build \
  -f services/users/Dockerfile.prod \
  -t 704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-users:prod \
  ./services/users

$ docker build \
  -f services/client/Dockerfile.prod \
  -t 704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-client:prod \
  --build-arg NODE_ENV=production \
  --build-arg REACT_APP_API_SERVICE_URL=${REACT_APP_API_SERVICE_URL} \
  ./services/client


$ docker push 704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-users:prod

$ docker push 704754483426.dkr.ecr.us-west-1.amazonaws.com/test-driven-client:prod
